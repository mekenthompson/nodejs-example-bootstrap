steps:
  - block: ":rocket: Deploy Buildkite infrastructure?"
    fields:
      - text: "Buildkite org slug"
        key: "org_slug"
        required: true
        hint: "Find it in your URL: buildkite.com/<org-slug>"
      - text: "Registry name"
        key: "registry"
        required: true
        default: "internal"
        hint: "Name for your package registry"
      - select: "Hosted agent shape"
        key: "shape"
        required: true
        default: "LINUX_AMD64_2X4"
        options:
          - label: "Linux AMD64 2x4"
            value: "LINUX_AMD64_2X4"
          - label: "Linux AMD64 4x16"
            value: "LINUX_AMD64_4X16"
          - label: "macOS M1 4x12"
            value: "MACOS_M1_4X12"
      - text: "Buildkite API token"
        key: "bk_token"
        required: true
        hint: "Create at buildkite.com/user/api-access-tokens with write_pipelines, read_pipelines, write_organizations, write_clusters, write_suites permissions and GraphQL access"

  - label: ":terraform: Plan"
    commands:
      - |
        docker run --rm \
          --volume "$PWD:/workdir" \
          --workdir /workdir \
          --env BUILDKITE_JOB_ID \
          --env BUILDKITE_BUILD_ID \
          --env BUILDKITE_AGENT_ACCESS_TOKEN \
          --volume /buildkite/agent/bin/buildkite-agent:/usr/bin/buildkite-agent \
          --entrypoint /bin/sh \
          hashicorp/terraform:1.5.7 \
          -c 'set -euo pipefail
          
          # Install curl if missing (needed by GraphQL calls)
          apk add --no-cache curl
          
          # Pull your form inputs into TF vars
          export TF_VAR_org_slug="$(buildkite-agent meta-data get org_slug)"
          export TF_VAR_registry_name="$(buildkite-agent meta-data get registry)"
          export TF_VAR_queue_shape="$(buildkite-agent meta-data get shape)"
          export TF_VAR_buildkite_api_token="$(buildkite-agent meta-data get bk_token)"
          
          cd terraform
          terraform init -input=false
          terraform plan -out=tf.plan'

  - wait

  - block: ":rocket: Apply changes?"
    depends_on: "terraform-plan"

  - label: ":terraform: Apply"
    commands:
      - |
        docker run --rm \
          --volume "$PWD:/workdir" \
          --workdir /workdir \
          --env BUILDKITE_JOB_ID \
          --env BUILDKITE_BUILD_ID \
          --env BUILDKITE_AGENT_ACCESS_TOKEN \
          --volume /buildkite/agent/bin/buildkite-agent:/usr/bin/buildkite-agent \
          --entrypoint /bin/sh \
          hashicorp/terraform:1.5.7 \
          -c 'set -euo pipefail
          
          # Install curl if missing (needed by GraphQL calls)
          apk add --no-cache curl
          
          # Pull your form inputs into TF vars
          export TF_VAR_org_slug="$(buildkite-agent meta-data get org_slug)"
          export TF_VAR_registry_name="$(buildkite-agent meta-data get registry)"
          export TF_VAR_queue_shape="$(buildkite-agent meta-data get shape)"
          export TF_VAR_buildkite_api_token="$(buildkite-agent meta-data get bk_token)"
          
          cd terraform
          terraform apply -auto-approve tf.plan'

  - wait

  - label: ":tada: Trigger nodejs-example pipeline"
    command: |
      buildkite-agent meta-data get org_slug | \
        xargs -I {} buildkite-agent pipeline upload --replace <<YAML
      steps:
        - trigger: "nodejs-example"
          build:
            message: "First build after bootstrap :rocket:"
      YAML