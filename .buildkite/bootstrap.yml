steps:
  - block: ":gear: Configure your Buildkite org"
    prompt: "Fill in these details, then click *Unblock* to set up hosted agents, Test Engine, and a Package Registry."
    fields:
      - text: "Org slug"
        key: org_slug
        required: true
        default: "bootstrap-example"
      - text: "Registry name"
        key: registry
        default: "bootstrap-registry"
      - select: "Hosted agent instance shape"
        key: shape
        options:
          - label: "2 vCPU / 4 GB Linux (LINUX_AMD64_2X4)"
            value: LINUX_AMD64_2X4
          - label: "4 vCPU / 8 GB Linux (LINUX_AMD64_4X8)"
            value: LINUX_AMD64_4X8
          - label: "Apple M2 Pro 32 GB macOS (MAC_M2PRO_32GB)"
            value: MAC_M2PRO_32GB
      - text: "Buildkite org API token (write scope)"
        key: bk_token
        required: true

steps:
  - label: ":terraform: Plan"
    plugins:
      - docker#v3.8.0:
          image: hashicorp/terraform:1.5.7
          # blank out Terraform’s own entrypoint so that "terraform" 
          # doesn't eat our /bin/sh as a sub-command
          entrypoint: [""]
          # now exec /bin/sh -e -c "<our script…>"
          command:
            - /bin/sh
            - -e
            - -c
            - |
              # grab our metadata into TF_VARs
              export TF_VAR_org_slug="$(buildkite-agent meta-data get org_slug)"
              export TF_VAR_registry_name="$(buildkite-agent meta-data get registry)"
              export TF_VAR_queue_shape="$(buildkite-agent meta-data get shape)"
              export TF_VAR_buildkite_api_token="$(buildkite-agent meta-data get bk_token)"

              # run terraform in its subfolder
              cd terraform
              terraform init -input=false
              terraform plan -out=tf.plan
    artifact_paths:
      - terraform/tf.plan

  - wait

  - block: ":white_check_mark: Apply the plan?"

  - label: ":rocket: terraform apply"
    plugins:
      docker#v3.8.0:
        image: hashicorp/terraform:1.5.7
        entrypoint: [""]
    command:
      - /bin/sh
      - -e
      - -c
      - |
        export TF_VAR_org_slug="$(buildkite-agent meta-data get org_slug)"
        export TF_VAR_registry_name="$(buildkite-agent meta-data get registry)"
        export TF_VAR_queue_shape="$(buildkite-agent meta-data get shape)"
        export TF_VAR_buildkite_api_token="$(buildkite-agent meta-data get bk_token)"
        cd terraform
        terraform apply -auto-approve tf.plan